<h2>Plan√®te <%= @planet.name %></h2>

<canvas width = "620" height = "496" id = "planet_canvas"></canvas>

<script type = "text/javascript" charset = "utf-8">
  // Get a handle to the canvas object
  var canvas = document.getElementById('planet_canvas');
  // Get the image context for this canvas
  var context = canvas.getContext('2d');

  var image = new Image();
  image.src = "<%= image_url("planet_canvas.png") %>";

  var position_x = [500, 480, 500, 425, 440, 410, 425, 400, 380, 390, 360, 370, 390, 325, 345, 355];
  var position_y = [250, 260, 270, 225, 235, 235, 245, 270, 270, 285, 275, 380, 390, 390, 380, 360];

  var elements = [];

  // Add event listener for `click` events.
  canvas.addEventListener('click', function(event) {
    var rect = event.target.getBoundingClientRect();
    var x = event.clientX - rect.left;
    var y = event.clientY - rect.top;
    // Collision detection between clicked offset and element.
    elements.forEach(function(element) {
      if (y < element.center_y + 5 && y > element.center_y - 5 
        && x < element.center_x + 5 && x > element.center_x - 5) {
        location.href = '<%= building_upgrade_path %>' + "?position=" + element.id;
      }
    });
  }, false);

  function drawPlanet(paths) {
    context.clearRect(0, 0, canvas.width, canvas.height);
    // draw background
    context.drawImage(image,0,0);
    // Render elements.
    elements.forEach(function(element) {
      // Create circle
      const circle = new Path2D();
      circle.arc(element.center_x, element.center_y, 5, 0, 2 * Math.PI);
      context.fillStyle = element.color;
      context.fill(circle);
      paths.push(circle);
    });
  }

  image.onload = function() {

    <% i = 0 %>
    <% @planet.buildings.each do |building| %>
    elements.push({
      <% if @planet.buildings.find_by(planet_id: building.planet_id, position: i) %>
      color: 'green',
      <% else %>
      color: 'red',
      <% end %>
      id: <%= i %>,
      center_x: position_x[<%= i %>],
      center_y: position_y[<%= i %>]
    });
    <% i += 1 %>
    <% end %>

    var paths = [];
    var mouse = {x:0, y:0, overPath: null}; 

    drawPlanet(paths);

    canvas.addEventListener("mousemove", (e) => {
      mouse.x = e.offsetX;
      mouse.y = e.offsetY;
      checkMouseOver(paths);
      canvas.style.cursor = mouse.overPath ? "pointer" : "default";
      if(mouse.overPath) {
        display_tooltip(e)
      } else {
        drawPlanet(paths);
      }
    });

    function display_tooltip(event) {
      var rect = event.target.getBoundingClientRect();
      var x = event.clientX - rect.left;
      var y = event.clientY - rect.top;
      elements.forEach(function(element) {
        if (y < element.center_y + 5 && y > element.center_y - 5
          && x < element.center_x + 5 && x > element.center_x - 5
          && element.color == "green") {
            fetch('<%= building_upgrade_path %>' + "?position=" + element.id, {
              headers : {
                'Content-Type': 'application/json',
                'Accept': 'application/json'
              }
            }).then(
              function(response) {
                if (response.status !== 200) {
                  console.log('Looks like there was a problem. Status Code: ' +
                    response.status);
                  return;
                }

                // Examine the text in the response
                response.json().then(function(data) {
                  drawPlanet(paths);

                  context.fillStyle = "grey";
                  context.fillRect(element.center_x-50, element.center_y-125, 150, 115);

                  context.fillStyle = "black";
                  context.font = '10px';
                  context.fillText(data["buildings"][0]["name"] + " lvl " + data["buildings"][0]["lvl"], element.center_x-45, element.center_y-105);
                  context.fillText("Nourriture : " + data["buildings"][0]["food_price"], element.center_x-45, element.center_y-90);
                  context.fillText("Metal : " + data["buildings"][0]["metal_price"], element.center_x-45, element.center_y-75);
                  context.fillText("Thorium : " + data["buildings"][0]["food_price"], element.center_x-45, element.center_y-60);
                  context.fillText("Prod. : " + data["buildings"][0]["production"], element.center_x-45, element.center_y-45);
                  context.fillText("Conso. : " + data["buildings"][0]["conso_power"], element.center_x-45, element.center_y-30);
                  context.fillText("Temps de construction : " + data["buildings"][0]["time_to_build"], element.center_x-45, element.center_y-15);

                  console.log(data);
                });
              }
            ).catch(function(err) {
              console.log('Fetch Error :-S', err);
            });
        }
      });
    }

    function checkMouseOver(paths) {
      var over;
      for(const p of paths) { context.isPointInPath(p, mouse.x, mouse.y) && (over = p) }
      if (over !== mouse.overPath) {
        mouse.overPath = over;
      }
    }
  }
</script>
